# The version of the specification format used for this file
spec_version: 1.0
# Short name for the pipeline referenced in the UI
title: "Zips up a file or directory"
version:
  # The version of Ubuntu's zip we are using
  package: "3.0"
base_image:
  # Pick a generic base image, in this case Ubuntu - Jammy (22.04LTS)
  name: ubuntu
  tag: jammy
authors:
  # Authors of the pipeline. The first email will be considered to be the maintainer of
  # the generated container images
  - name: Thomas G. Close
    email: thomas.close@sydney.edu.au
docs:
  # Link to the external documentation for the tool
  info_url: https://manpages.ubuntu.com/manpages/focal/man1/zip.1.html
  # Description for auto-generated docss
  description: |
    This is a simple pipeline that zips up the given directory
packages:
  # Install the zip command in the Ubuntu image
  system:
    - zip
command:
  # Use the generic "shell-command" task
  task: pydra2app.common:shell
  # the pipeline is desgined to run on imaging "sessions" as opposed to "subjects" or "projects"
  row_frequency: session
  # List the inputs that are presented to end-user in UI
  inputs:
    to_zip:
      # MIME-type or "MIME-like" format, generic/fs-object corresponds a file or directory
      datatype: generic/fs-object
      # description of field presented in UI
      help: "Input file-system object to zip"
      # Additional config args that are passed to the shell task as part of the "inputs" dict
      configuration:
        # Position of field on command line call. Negative numbers are indexed backwards from the end
        argstr: ""
        # prefix for field when printed to command line
        position: -1
  # List the outputs generated by the pipeline
  outputs:
    zipped:
      # MIME-type or "MIME-like" format
      datatype: application/zip
      # description of field presented in UI
      help: Zipped file-system Object
      # Additional config args that are passed to the shell task as part of the "outputs" dict
      configuration:
        # Position of field on command line call. Negative numbers are indexed backwards from the end
        argstr: ""
        # prefix for field when printed to command line
        position: -2
  # Parameters exposed to user to UI
  parameters:
    compression:
      # Format of the field
      datatype: field/integer
      # description of field presented in UI
      help: the level of compression applied
      # Default value, filled in on the UI
      default: 5
      # Additional config args that are passed to the shell task in the "parameters" dict
      configuration:
        # string template for field when printed to command line. "{field-name}" are
        # replaced by the value provided to the field name
        argstr: -{compression}
  # Additional args passed to shell
  configuration:
    # the command to run
    executable: zip
